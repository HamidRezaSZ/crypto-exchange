services:
  web:
    build: .
    command: gunicorn crypto.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/app
      - ./static:/app/static
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - migrate

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./static:/app/static:ro
    depends_on:
      - web

  migrate:
    build: .
    command:  python manage.py collectstatic --noinput && python manage.py migrate
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: crypto_db
      POSTGRES_USER: crypto_user
      POSTGRES_PASSWORD: crypto_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data

  celery:
    build: .
    command: celery -A crypto worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis

  celery-beat:
    build: .
    command: celery -A crypto beat --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis

  redis:
    image: redis:7-alpine

volumes:
  postgres_data:
